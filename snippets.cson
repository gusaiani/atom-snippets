# Gustavo Saianiâ€™s Atom.io snippets
'.source.js':
  '.':
    prefix: '.'
    body: 'this.'

  'arrow function':
    prefix: 'af'
    body: '($1) => {$2}'

  'console.log':
    prefix: 'log'
    body: 'console.log($1)'

  const:
    prefix: 'const'
    body: 'const { $1 } = $2'

  'export function':
    prefix: 'ef'
    body: """
    export function $1($2) {
    \t$3
    }
    """

  let:
    prefix: 'let'
    body: 'let { $1 } = $2'

  map:
    prefix: 'map'
    body: '$1.map(($2) => {$3})'

  porps:
    prefix: 'porps'
    body: 'this.props'

  props:
    prefix: 'props'
    body: 'this.props'

  state:
    prefix: 'state'
    body: 'this.state'

  'Debugger':
    prefix: 'db'
    body: 'debugger'

  'Object.assign({}, state)':
    prefix: 'oas'
    body: 'Object.assign({}, state, {$1})'

  "import React, {Component, PropTypes} from 'react'":
    prefix: 'ircp'
    body: "import React, {Component, PropTypes} from 'react'\n"

  'this.setState':
    prefix: 'setState'
    body: 'this.setState($1)'

  className:
    prefix: 'cn'
    body: 'className="$1"'

  render:
    prefix: 'render'
    body: """
    render() {
    \t$1
    }
    """

  label:
    prefix: 'label'
    body: '<label$1>$2</label>'

  div:
    prefix: 'div'
    body: '<div$1>$2</div>'

  span:
    prefix: 'span'
    body: '<span$1>$2</span>'

  form:
    prefix: 'form'
    body: '<form$1>$2</form>'

  button:
    prefix: 'button'
    body: '<button$1>$2</button>'

  table:
    prefix: 'table'
    body: '<table$1>$2</table>'

  tr:
    prefix: 'tr'
    body: """
    <tr>
    \t$1
    </tr>
    """

  th:
    prefix: 'th'
    body: '<th>$1</th>'

  td:
    prefix: 'td'
    body: '<td>$1</td>'

  h1:
    prefix: 'h1'
    body: '<h1>$1</h1>'

  p:
    prefix: 'p'
    body: '<p>$1</p>'

'.source.php':
  "?":
    prefix: '?'
    body: '<? $1 ?>'

'.source.elixir':
  changeset:
    prefix: 'ch'
    body: 'changeset'

  alter:
    prefix: 'alter'
    body: 'alter table $1 do \t\nend'

  assert:
    prefix: 'as'
    body: 'assert '

  def:
    prefix: 'd'
    body: 'def $1 do\n\t$2\nend'

  defmodule:
    prefix: 'defm'
    body: 'defmodule $1 do\n\t$2\nend'

  'defmodule via dm':
    prefix: 'dm'
    body: 'defmodule $1 do\n\t$2\nend'

  'inline def':
    prefix: 'id'
    body: 'def $1, do: $2'

  'inline defp':
    prefix: 'idp'
    body: 'defp $1, do: $2'

  'IO.Puts':
    prefix: 'ip'
    body: 'IO.puts '

  'IO.inspect':
    prefix: 'ii'
    body: 'IO.inspect '

  '__MODULE__':
    prefix: 'mod'
    body: '__MODULE__'

  for:
    prefix: 'for'
    body: 'for $1 <- $2 do\n\t$3\nend'

  'Enum.map':
    prefix: 'map'
    body: 'Enum.map($1)'

  'Enum.each':
    prefix: 'each'
    body: 'Enum.each($1)'

  'Enum.join':
    prefix: 'join'
    body: 'Enum.join($1)'

  'Enum.put':
    prefix: 'put'
    body: 'Enum.put($1)'

  'Enum.sort':
    prefix: 'sort'
    body: 'Enum.sort($1)'

  'Enum.reduce':
    prefix: 'reduce'
    body: 'Enum.reduce($1)'

  'Enum.any?':
    prefix: 'any?'
    body: 'Enum.any?'
